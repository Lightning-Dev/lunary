version: "3.8"

services:
  db:
    image: ghcr.io/lunary-ai/db:latest
    volumes:
      - lunary-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    networks:
      - lunary-network
    restart: unless-stopped
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    image: ghcr.io/lunary-ai/auth:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRESQL_TABLE_SCHEMA: auth
      POSTGRESQL_CONNECTION_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    networks:
      - lunary-network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/lunary-ai/api:latest
    depends_on:
      - db
      - auth
    ports:
      - 3005:3000

    restart: unless-stopped
    environment:
      SUPERTOKENS_URI: "http://auth:3567"
      DATABASE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    networks:
      - lunary-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    image: ghcr.io/lunary-ai/app:latest
    depends_on:
      - api
    environment:
      API_URI: "http://api:3000"
    networks:
      - lunary-network
    ports:
      - "8080:8080"
    restart: unless-stopped

networks:
  lunary-network:

volumes:
  lunary-db-data:
